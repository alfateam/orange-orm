name: Node.js CI

on:
  push:
    branches: [ _pgAction ]
  pull_request:
    branches: [ _pgAction ]

jobs:
  build:

    run:s-on: ubuntu-latest
    # container:
    #   image:  node:18-alpine
    container: node:18-alpine

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: P@assword123
          ACCEPT_EULA: 'Y'
        ports:
          - 1433:1433
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: apk update
      - run: apk --no-cache add curl
      - run: apk add sudo
      - # odbc alpine
      - # https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver16
      - run: curl -O https://download.microsoft.com/download/b/9/f/b9f3cce4-3925-46d4-9f46-da08869c6486/msodbcsql18_18.1.1.1-1_amd64.apk
      - run: curl -O https://download.microsoft.com/download/b/9/f/b9f3cce4-3925-46d4-9f46-da08869c6486/mssql-tools18_18.1.1.1-1_amd64.apk
      - run: sudo apk add --allow-untrusted msodbcsql18_18.1.1.1-1_amd64.apk
      - run: sudo apk add --allow-untrusted mssql-tools18_18.1.1.1-1_amd64.apk
      - run: npm install
      - run: npm run lint
      - run: npm test