const oracledb = require('oracledb');

oracledb.outFormat = oracledb.OUT_FORMAT_OBJECT;
oracledb.fetchAsBuffer = [oracledb.BLOB];


async function run() {
	let connection;
	let connection2;

	try {
		connection = await oracledb.getConnection({
			user: 'sys',
			password: 'P@assword123',
			connectString: 'oracle/XE',
			privilege: oracledb.SYSDBA
		});
		connection2 = await oracledb.getConnection({
			user: 'sys',
			password: 'P@assword123',
			connectString: 'oracle/XE',
			privilege: oracledb.SYSDBA
		});



		// 	`INSERT (id, name, balance, isActive)
		// 	VALUES (10, 'source.name', 177, 0);
		// 	SELECT * FROM
		// RETURNING target.id, target.name INTO :new_id, :new_name`,

		let out
		// Replace with your query
		// const out = [];
		// let result = await connection.execute(
		// `INSERT INTO datetest (tdate, tdatetime_tz)
		// 	VALUES (TO_DATE('2023-07-14 12:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2023-07-14T12:00:00.000', 'YYYY-MM-DD"T"HH24:MI:SS.FF6'))`,
		// 	out
		// );
		// console.dir(out);
		// console.log(result);

		// await connection.execute(
		// 	`BEGIN
		// 	EXECUTE IMMEDIATE 'DROP TABLE datetest';
		// EXCEPTION
		// 	WHEN OTHERS THEN NULL;
		// END;
		// `
		// );
		// await connection.execute(
		// 	`CREATE TABLE datetest(
		// 		id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		// 		tdate TIMESTAMP,
		// 		tdatetime TIMESTAMP,
		// 		tdatetime_tz TIMESTAMP
		// 	)`
		// );
		// await connection.execute(
		// 	`INSERT INTO datetest(tdate, tdatetime_tz)
		//  	VALUES(TO_DATE('2023-07-14 12:00:00', 'YYYY-MM-DD HH24:MI:SS'), TO_TIMESTAMP('2023-07-14T12:00:00.000', 'YYYY-MM-DD"T"HH24:MI:SS.FF6'))`
		// );
		// await connection.execute(
		// 	`COMMIT`
		// );

		const result = await connection2.execute(
			`select datetest.id as sdatetest0,TO_CHAR(datetest.tdate, 'YYYY-MM-DD"T"HH24:MI:SS.FF3') as sdatetest1,TO_CHAR(datetest.tdatetime, 'YYYY-MM-DD"T"HH24:MI:SS.FF3') as sdatetest2,TO_CHAR(datetest.tdatetime_tz, 'YYYY-MM-DD"T"HH24:MI:SS.FF3') as sdatetest3 from datetest datetest order by datetest.id FETCH FIRST 1 ROWS ONLY`,
		);


		console.dir(result);


	} catch (err) {
		console.error(err);
	} finally {
		if (connection) {
			try {
				await connection.close();
			} catch (err) {
				console.error(err);
			}
		}
	}
}

run();
